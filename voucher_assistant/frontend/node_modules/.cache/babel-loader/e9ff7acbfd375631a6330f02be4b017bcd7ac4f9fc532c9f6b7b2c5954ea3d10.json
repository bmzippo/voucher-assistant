{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const voucherApi = {\n  // Get voucher summary\n  getVoucherSummary: async voucherId => {\n    const response = await api.post(`/api/vouchers/${voucherId}/summary`);\n    return response.data;\n  },\n  // Chat with voucher\n  chatWithVoucher: async (voucherId, message) => {\n    const response = await api.post(`/api/vouchers/${voucherId}/chat`, message);\n    return response.data;\n  },\n  // Search vouchers\n  searchVouchers: async (query, voucherId, topK = 5) => {\n    const response = await api.post('/api/search', {\n      query,\n      voucher_id: voucherId,\n      top_k: topK\n    });\n    return response.data;\n  },\n  // Vector search\n  vectorSearch: async (query, topK = 5, minScore = 0.7) => {\n    const response = await api.post('/api/vector-search', {\n      query,\n      top_k: topK,\n      min_score: minScore\n    });\n    return response.data;\n  },\n  // Hybrid search\n  hybridSearch: async (query, topK = 5, minScore = 0.7) => {\n    const response = await api.post('/api/hybrid-search', {\n      query,\n      top_k: topK,\n      min_score: minScore\n    });\n    return response.data;\n  },\n  // Health check\n  healthCheck: async () => {\n    const response = await api.get('/health');\n    return response.data;\n  },\n  // Raw axios instance for direct calls\n  post: api.post.bind(api),\n  get: api.get.bind(api),\n  put: api.put.bind(api),\n  delete: api.delete.bind(api)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","voucherApi","getVoucherSummary","voucherId","response","post","data","chatWithVoucher","message","searchVouchers","query","topK","voucher_id","top_k","vectorSearch","minScore","min_score","hybridSearch","healthCheck","get","bind","put","delete"],"sources":["/Users/1-tiennv-m/1MG/Projects/LLM/voucher_assistant/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { VoucherSummary, ChatMessage, ChatResponse, SearchResult } from '../types';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport const voucherApi = {\n  // Get voucher summary\n  getVoucherSummary: async (voucherId: string): Promise<VoucherSummary> => {\n    const response = await api.post(`/api/vouchers/${voucherId}/summary`);\n    return response.data;\n  },\n\n  // Chat with voucher\n  chatWithVoucher: async (voucherId: string, message: ChatMessage): Promise<ChatResponse> => {\n    const response = await api.post(`/api/vouchers/${voucherId}/chat`, message);\n    return response.data;\n  },\n\n  // Search vouchers\n  searchVouchers: async (query: string, voucherId?: string, topK: number = 5): Promise<SearchResult[]> => {\n    const response = await api.post('/api/search', {\n      query,\n      voucher_id: voucherId,\n      top_k: topK\n    });\n    return response.data;\n  },\n\n  // Vector search\n  vectorSearch: async (query: string, topK: number = 5, minScore: number = 0.7): Promise<any> => {\n    const response = await api.post('/api/vector-search', {\n      query,\n      top_k: topK,\n      min_score: minScore\n    });\n    return response.data;\n  },\n\n  // Hybrid search\n  hybridSearch: async (query: string, topK: number = 5, minScore: number = 0.7): Promise<any> => {\n    const response = await api.post('/api/hybrid-search', {\n      query,\n      top_k: topK,\n      min_score: minScore\n    });\n    return response.data;\n  },\n\n  // Health check\n  healthCheck: async (): Promise<any> => {\n    const response = await api.get('/health');\n    return response.data;\n  },\n\n  // Raw axios instance for direct calls\n  post: api.post.bind(api),\n  get: api.get.bind(api),\n  put: api.put.bind(api),\n  delete: api.delete.bind(api)\n};\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAE7E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,UAAU,GAAG;EACxB;EACAC,iBAAiB,EAAE,MAAOC,SAAiB,IAA8B;IACvE,MAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,iBAAiBF,SAAS,UAAU,CAAC;IACrE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAC,eAAe,EAAE,MAAAA,CAAOJ,SAAiB,EAAEK,OAAoB,KAA4B;IACzF,MAAMJ,QAAQ,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,iBAAiBF,SAAS,OAAO,EAAEK,OAAO,CAAC;IAC3E,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAG,cAAc,EAAE,MAAAA,CAAOC,KAAa,EAAEP,SAAkB,EAAEQ,IAAY,GAAG,CAAC,KAA8B;IACtG,MAAMP,QAAQ,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,aAAa,EAAE;MAC7CK,KAAK;MACLE,UAAU,EAAET,SAAS;MACrBU,KAAK,EAAEF;IACT,CAAC,CAAC;IACF,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAQ,YAAY,EAAE,MAAAA,CAAOJ,KAAa,EAAEC,IAAY,GAAG,CAAC,EAAEI,QAAgB,GAAG,GAAG,KAAmB;IAC7F,MAAMX,QAAQ,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,oBAAoB,EAAE;MACpDK,KAAK;MACLG,KAAK,EAAEF,IAAI;MACXK,SAAS,EAAED;IACb,CAAC,CAAC;IACF,OAAOX,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAW,YAAY,EAAE,MAAAA,CAAOP,KAAa,EAAEC,IAAY,GAAG,CAAC,EAAEI,QAAgB,GAAG,GAAG,KAAmB;IAC7F,MAAMX,QAAQ,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,oBAAoB,EAAE;MACpDK,KAAK;MACLG,KAAK,EAAEF,IAAI;MACXK,SAAS,EAAED;IACb,CAAC,CAAC;IACF,OAAOX,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAY,WAAW,EAAE,MAAAA,CAAA,KAA0B;IACrC,MAAMd,QAAQ,GAAG,MAAMP,GAAG,CAACsB,GAAG,CAAC,SAAS,CAAC;IACzC,OAAOf,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAD,IAAI,EAAER,GAAG,CAACQ,IAAI,CAACe,IAAI,CAACvB,GAAG,CAAC;EACxBsB,GAAG,EAAEtB,GAAG,CAACsB,GAAG,CAACC,IAAI,CAACvB,GAAG,CAAC;EACtBwB,GAAG,EAAExB,GAAG,CAACwB,GAAG,CAACD,IAAI,CAACvB,GAAG,CAAC;EACtByB,MAAM,EAAEzB,GAAG,CAACyB,MAAM,CAACF,IAAI,CAACvB,GAAG;AAC7B,CAAC;AAED,eAAeA,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}